{"version":3,"file":"static/js/757.3031d440.chunk.js","mappings":"uMAGaA,EAAe,SAACC,GAAD,OAAa,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,GAAW,YAE5DC,EAAWF,EAAKG,SAAWH,EAAKI,MAGhCC,EAAYH,IAAY,gBAAKI,UAAU,cAAf,SAA8BN,EAAKI,QAEjE,OAEI,iBAAKE,UAAU,WAAf,WAEQ,SAACR,GAAD,gBAAUQ,UAAWJ,EAAW,QAAU,YAAgBH,GAAWE,IAE/DI,IAKrB,CAlB2B,C,kGCF5B,EAAwB,qBAAxB,EAA4D,4BAA5D,EAAsG,2BAAtG,EAA2J,uCAA3J,EAAuN,kCAAvN,EAA6Q,iCAA7Q,EAAkU,iCAAlU,EAA8X,wCAA9X,EAAic,wCAAjc,EAAkgB,sCAAlgB,EAAukB,4C,8BCCzjBE,EAAe,SAACC,GAE1B,IAAIA,EAEJ,MAAO,mBAET,E,iCCAIC,GAAiBC,EAAAA,EAAAA,GAAW,CAC9BC,KAAM,SADaD,ECDR,SAAmBT,GAE9B,IFCuBW,EEDjBC,GAAQhB,EAAAA,EAAAA,GAAa,SAErBiB,GFDiBF,EECE,GFDS,SAACJ,GAEpC,GAAIA,EAAMO,OAASH,EAAQ,MAAM,iBAAN,OAAwBA,EAAxB,UAG5B,GEFE,OAEI,+BACI,iBAAMN,UAAWU,EAAmBC,OAAO,GAAGC,SAAUjB,EAAMkB,aAA9D,UAEI,iBAAKb,UAAWU,EAAhB,WAEI,gBAAKV,UAAWU,EAAhB,UAEI,SAACI,EAAA,EAAD,CAAOC,SAAU,CAACd,EAAcO,GAASQ,UAAWT,EAAOU,KAAM,QAAUC,YAAY,aAG3F,gBAAKlB,UAAWU,EAAhB,UACI,SAACI,EAAA,EAAD,CAAOC,SAAU,CAACd,EAAcO,GAASQ,UAAWT,EAAOU,KAAM,WAAaC,YAAY,WAAWC,KAAM,gBAG/G,iBAAKnB,UAAS,UAAKU,EAAL,YAAgCA,GAA9C,WACI,SAACU,EAAA,EAAD,CAAUC,GAAG,MAAMJ,KAAM,aAAcK,GAAI,CAAG,qBAAsB,CAAEC,MAAO,UAAWC,SAAU,QAClG,kBAAOxB,UAAWU,EAAgCe,QAAQ,MAA1D,4BAEF9B,EAAM+B,aAAc,gBAAK1B,UAAWU,EAA+BiB,IAAKhC,EAAM+B,WAAYE,IAAI,KAC9FjC,EAAM+B,aAAc,SAACZ,EAAA,EAAD,CAAQG,KAAK,UAAUF,SAAU,CAACd,EAAcO,GAASQ,UAAWT,EAAOW,YAAY,wBAE7G,gBAAKlB,UAAWU,EAAhB,UACI,mBAAQV,UAAWU,EAAnB,UAAiD,iBAAMV,UAAWU,EAAjB,uBAGnDf,EAAMG,QAAS,gBAAKE,UAAWU,EAAhB,SAA2Cf,EAAMG,cAMrF,IDFD,GAAe+B,EAAAA,EAAAA,KARO,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,OACnBE,WAAYH,EAAME,KAAKC,WACvBP,WAAYI,EAAME,KAAKN,WACvBQ,MAAOJ,EAAME,KAAKE,MAJA,GAQkB,CAACC,MAAAA,EAAAA,IAAzC,EAhCc,SAACxC,GAOf,OAAIA,EAAMoC,QACC,SAAC,KAAD,CAAUK,GAAI,cAKjB,iBAAKpC,UAAWqC,EAAhB,WAEI,gBAAKrC,UAAWqC,EAAhB,oBAEA,SAAClC,EAAD,CAAiBuB,WAAY/B,EAAM+B,WAAYd,SAf1C,SAAC0B,GACd3C,EAAMwC,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASL,WAAYK,EAASG,QAEhF,EAY8ER,WAAYtC,EAAMsC,eAKhG,G","sources":["components/FormsComponents/FormControll.jsx","webpack://shootgun/./src/components/LogIn/LogIn.module.sass?36b7","Utils/Validators/Validators.js","components/LogIn/LogIn.jsx","components/LogIn/FormLogIn.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './FormControll.sass'\r\n\r\nexport const FormControll = (Element) => ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n\r\n    const showError = hasError && <div className='error__span'>{meta.error}</div>\r\n   \r\n    return (\r\n\r\n        <div className='wrapForm'>\r\n        \r\n                <Element  className={hasError ? 'error' : 'itemForm'} {...input} {...props} />\r\n            \r\n                    { showError }\r\n                \r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"LogIn_login__OHHBt\",\"login__title\":\"LogIn_login__title__hSqLk\",\"login__form\":\"LogIn_login__form__2DJs6\",\"login__form__captchaUrl\":\"LogIn_login__form__captchaUrl__PiY6a\",\"login__form__error\":\"LogIn_login__form__error__Lb1g7\",\"login__form__wrap\":\"LogIn_login__form__wrap__4B4L+\",\"login__form__item\":\"LogIn_login__form__item__rvXIt\",\"login__form__item__check\":\"LogIn_login__form__item__check__I6iFA\",\"login__form__item__label\":\"LogIn_login__form__item__label__tNeSy\",\"login__form__item__btn\":\"LogIn_login__form__item__btn__twln5\",\"login__form__item__btn__span\":\"LogIn_login__form__item__btn__span__8pVZE\"};","\r\n\r\n export const ReqaredField = (value) => {\r\n\r\n    if (value)  return undefined\r\n\r\n    return 'Field is required'\r\n    \r\n }\r\n\r\n export const MaxLength = (number) => (value) => {\r\n\r\n   if (value.length > number) return `Max-length is ${number} symbol`\r\n\r\n   return undefined\r\n }\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport FormLogIn from \"./FormLogIn\";\r\nimport s from './LogIn.module.sass'\r\nimport { logIn } from './../../state/auth-reducer';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst LoginReduxform = reduxForm ({\r\n    form: 'login'\r\n}) (FormLogIn)\r\n\r\nconst LogIn = (props) => {\r\n  \r\nconst onSubmit = (formData) => {\r\n    props.logIn(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    \r\n}\r\n\r\nif (props.isAuth) {\r\n    return <Navigate to={'/profile'}/>\r\n}\r\n\r\n    return (\r\n               \r\n        <div className={s.login}>\r\n\r\n            <div className={s.login__title}>LogIn</div>\r\n       \r\n            <LoginReduxform  captchaUrl={props.captchaUrl} onSubmit={onSubmit} rememberMe={props.rememberMe} />\r\n\r\n        </div>    \r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    rememberMe: state.auth.rememberMe,\r\n    captchaUrl: state.auth.captchaUrl,\r\n    clear: state.auth.clear\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {logIn}) (LogIn)","import React from \"react\";\r\nimport style from './LogIn.module.sass'\r\nimport {Field} from 'redux-form'\r\nimport {Checkbox} from \"@mui/material\";\r\nimport { FormControll } from '../FormsComponents/FormControll';\r\nimport { ReqaredField, MaxLength } from \"../../Utils/Validators/Validators\";\r\n\r\nexport default function FormLogIn(props) {\r\n    \r\n    const Input = FormControll('input')\r\n\r\n    const Length = MaxLength(40) \r\n\r\n    return (\r\n\r\n        <>\r\n            <form className={style.login__form} action='' onSubmit={props.handleSubmit}>\r\n                \r\n                <div className={style.login__form__wrap}>\r\n\r\n                    <div className={style.login__form__item}>\r\n                        \r\n                        <Field validate={[ReqaredField, Length]} component={Input} name={'email'}  placeholder=\"Email\" />\r\n                    </div>\r\n\r\n                    <div className={style.login__form__item}>\r\n                        <Field validate={[ReqaredField, Length]} component={Input} name={'password'}  placeholder=\"Password\" type={'password'}/>\r\n                    </div>\r\n\r\n                    <div className={`${style.login__form__item} ${style.login__form__item__check}`}>                        \r\n                        <Checkbox id='rem' name={'rememberMe'} sx={{  '& .MuiSvgIcon-root': { color: '#ffffff', fontSize: 52 } }} ></Checkbox>\r\n                        <label className={style.login__form__item__label} htmlFor='rem' >Remember me</label> \r\n                    </div>\r\n                    { props.captchaUrl && <img className={style.login__form__captchaUrl} src={props.captchaUrl} alt=\"\" /> }    \r\n                    { props.captchaUrl && <Field  name=\"captcha\" validate={[ReqaredField, Length]} component={Input} placeholder='Symbols from image' /> }\r\n                   \r\n                    <div className={style.login__form__item}>\r\n                        <button className={style.login__form__item__btn}><span className={style.login__form__item__btn__span}>LogIn</span></button> \r\n                    </div>\r\n                        \r\n                    { props.error && <div className={style.login__form__error}>{props.error}</div>}\r\n                </div>\r\n            </form>\r\n        </>\r\n        \r\n    )\r\n}"],"names":["FormControll","Element","input","meta","props","hasError","touched","error","showError","className","ReqaredField","value","LoginReduxform","reduxForm","form","number","Input","Length","length","style","action","onSubmit","handleSubmit","Field","validate","component","name","placeholder","type","Checkbox","id","sx","color","fontSize","htmlFor","captchaUrl","src","alt","connect","state","isAuth","auth","rememberMe","clear","logIn","to","s","formData","email","password","captcha"],"sourceRoot":""}